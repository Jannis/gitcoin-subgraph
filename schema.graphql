enum BountyStage {
  DRAFT
  ACTIVE
  DEAD
}

enum UserType {
  FUNDER
  HUNTER
}

type Bounty @entity {
  id: ID!
  issuer: Bytes
  fulfiller: Bytes!
  deadline: BigInt
  fulfillmentAmount: BigInt
  paysTokens: Boolean
  bountyStage: BountyStage
  balance: BigInt
  bountyDataHash: String
  fulfillmentDataHash: String
  bountyData: BountyData!
  fulfillmentData: FulfillmentData!
}

type BountyData @entity {
  id: ID!
  bountyId: BigInt!
  title: String
  description: String
  sourceFileName: String
  sourceFileHash: String
  sourceDirectoryHash: String
  issuerName: String
  issuerEmail: String
  issuerGithubUsername: String
  issuerAddress: String
  projectType: String
  permissionType: String
  autoApproveWorkers: Boolean
  hiringRightNow: String
  jobDescription: String
  fundingOrganisation: String
  isFeatured: Boolean
  repoType: String
  featuringDate: BigInt
  funders: [String!]
  categories: [String!]
  created: BigInt
  webReferenceURL: String
  feeAmount: BigDecimal
  feeTxId: String
  issueKeywords: String
  experienceLevel: String
  projectLength: String
  bountyType: String
  estimatedHours: String
  reservedFor: String
  tokenName: String
  tokenAddress: String
  expireDate: BigInt
}

type FulfillmentData @entity {
  id: ID!
  bountyId: BigInt!
  accepted: Boolean
  description: String
  sourceFileName: String
  sourceFileHash: String
  sourceDirectoryHash: String
  githubPRLink: String
  hoursWorked: String
  email: String
  githubUsername: String
  address: String
}

type Leaderboard @entity {
  id: ID!
  address: String!
  githubUsername: String
  name: String
  userType: UserType!
  tokenName: String!
  totalBounties: BigInt!
  totalAmount: BigInt!
}

type Kudo @entity {
  id: ID!
  gen0: Boolean!
  parent: BigInt!
  owner: Bytes!
  clonesAllowed: BigInt!
  price: BigInt! #finney
  tokenURI: String!
  totalFees: BigInt! #finney
  totalRevenue: BigInt! #finney
}

type BountyIssued @entity {
  id: ID!
  bountyId: BigInt! # uint256
}

type BountyActivated @entity {
  id: ID!
  bountyId: BigInt! # uint256
  issuer: Bytes! # address
}

type BountyFulfilled @entity {
  id: ID!
  bountyId: BigInt! # uint256
  fulfiller: Bytes! # address
  _fulfillmentId: BigInt! # uint256
}

type FulfillmentUpdated @entity {
  id: ID!
  _bountyId: BigInt! # uint256
  _fulfillmentId: BigInt! # uint256
}

type FulfillmentAccepted @entity {
  id: ID!
  bountyId: BigInt! # uint256
  fulfiller: Bytes! # address
  _fulfillmentId: BigInt! # uint256
}

type BountyKilled @entity {
  id: ID!
  bountyId: BigInt! # uint256
  issuer: Bytes! # address
}

type ContributionAdded @entity {
  id: ID!
  bountyId: BigInt! # uint256
  contributor: Bytes! # address
  value: BigInt! # uint256
}

type DeadlineExtended @entity {
  id: ID!
  bountyId: BigInt! # uint256
  newDeadline: BigInt! # uint256
}

type BountyChanged @entity {
  id: ID!
  bountyId: BigInt! # uint256
}

type IssuerTransferred @entity {
  id: ID!
  _bountyId: BigInt! # uint256
  _newIssuer: Bytes! # address
}

type PayoutIncreased @entity {
  id: ID!
  _bountyId: BigInt! # uint256
  _newFulfillmentAmount: BigInt! # uint256
}
